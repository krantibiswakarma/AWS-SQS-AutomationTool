package GLTesting.SQSTool;

import com.amazonaws.AmazonClientException;
import com.amazonaws.AmazonServiceException;
import com.amazonaws.auth.AWSStaticCredentialsProvider;
import com.amazonaws.auth.BasicAWSCredentials;
import com.amazonaws.services.s3.AmazonS3;
import com.amazonaws.services.s3.AmazonS3ClientBuilder;
import com.amazonaws.services.sqs.AmazonSQS;
import com.amazonaws.services.sqs.AmazonSQSClientBuilder;
import com.amazonaws.services.sqs.model.*;

import java.util.List;
import java.util.Map.Entry;

public class SQSSimpleJavaClient {

	/**
	 * This class make basic requests to Amazon SQS using the
	 * AWS SDK for Java.
	 * <p>
	 * Prerequisites: You must have a valid Amazon Web Services developer account,
	 * and be signed up to use Amazon SQS. For more information about Amazon SQS,
	 * see https://aws.amazon.com/sqs
	 * <p>
	 */
	static String myQueueUrl;
	CredentialProvider provider = new CredentialProvider();
	final AmazonSQS sqs = provider.provideCredential();
	        /*
	         * Create a new instance of the builder with all defaults (credentials
	         * and region) set automatically. For more information, see
	         * Creating Service Clients in the AWS SDK for Java Developer Guide.
	         */
	    public String createQueue() {
	    	try {
	             //Create a queue.
	            System.out.println("Creating a new SQS queue called MyQueue.\n");
	            final CreateQueueRequest createQueueRequest =
	                    new CreateQueueRequest("danielzaccagniniGeneralLedgerQueue");
	            myQueueUrl = sqs.createQueue(createQueueRequest)
	                    .getQueueUrl();
	            System.out.println("myQueueUrl: "+myQueueUrl);
	    	}
	    	catch (final AmazonServiceException ase) {
	            System.out.println("Caught an AmazonServiceException, which means " +
	                    "your request made it to Amazon SQS, but was " +
	                    "rejected with an error response for some reason.");
	            System.out.println("Error Message:    " + ase.getMessage());
	            System.out.println("HTTP Status Code: " + ase.getStatusCode());
	            System.out.println("AWS Error Code:   " + ase.getErrorCode());
	            System.out.println("Error Type:       " + ase.getErrorType());
	            System.out.println("Request ID:       " + ase.getRequestId());
	        } catch (final AmazonClientException ace) {
	            System.out.println("Caught an AmazonClientException, which means " +
	                    "the client encountered a serious internal problem while " +
	                    "trying to communicate with Amazon SQS, such as not " +
	                    "being able to access the network.");
	            System.out.println("Error Message: " + ace.getMessage());
	        }
	    	return myQueueUrl;
	    	

	    }
	    
	    public void listQueues() {
	    	 // List all queues.
	    	try {
            System.out.println("Listing all queues in your account.\n");
            for (final String queueUrl : sqs.listQueues().getQueueUrls()) {
                System.out.println("  QueueUrl: " + queueUrl);
            }
            System.out.println();
	    	}
	    	catch (final AmazonServiceException ase) {
	            System.out.println("Caught an AmazonServiceException, which means " +
	                    "your request made it to Amazon SQS, but was " +
	                    "rejected with an error response for some reason.");
	            System.out.println("Error Message:    " + ase.getMessage());
	            System.out.println("HTTP Status Code: " + ase.getStatusCode());
	            System.out.println("AWS Error Code:   " + ase.getErrorCode());
	            System.out.println("Error Type:       " + ase.getErrorType());
	            System.out.println("Request ID:       " + ase.getRequestId());
	        } catch (final AmazonClientException ace) {
	            System.out.println("Caught an AmazonClientException, which means " +
	                    "the client encountered a serious internal problem while " +
	                    "trying to communicate with Amazon SQS, such as not " +
	                    "being able to access the network.");
	            System.out.println("Error Message: " + ace.getMessage());
	        }
	    	

	    }
	    
	    public void sendMessage(String myQueueUrl) {
	    	try {
	    	// Send a message.
            System.out.println("Sending a message to MyQueue.\n");
            sqs.sendMessage(new SendMessageRequest(myQueueUrl,
                    GiveMeJSON.jsonBody()));
	    	}
	    	catch (final AmazonServiceException ase) {
	            System.out.println("Caught an AmazonServiceException, which means " +
	                    "your request made it to Amazon SQS, but was " +
	                    "rejected with an error response for some reason.");
	            System.out.println("Error Message:    " + ase.getMessage());
	            System.out.println("HTTP Status Code: " + ase.getStatusCode());
	            System.out.println("AWS Error Code:   " + ase.getErrorCode());
	            System.out.println("Error Type:       " + ase.getErrorType());
	            System.out.println("Request ID:       " + ase.getRequestId());
	        } catch (final AmazonClientException ace) {
	            System.out.println("Caught an AmazonClientException, which means " +
	                    "the client encountered a serious internal problem while " +
	                    "trying to communicate with Amazon SQS, such as not " +
	                    "being able to access the network.");
	            System.out.println("Error Message: " + ace.getMessage());
	        }
	    }
	    
	    public void receiveMessage() {
	    	try {
	    	// Receive messages.
            System.out.println("Receiving messages from MyQueue.\n");
            final ReceiveMessageRequest receiveMessageRequest =
                    new ReceiveMessageRequest(myQueueUrl);
            final List<Message> messages = sqs.receiveMessage(receiveMessageRequest)
                    .getMessages();
            for (final Message message : messages) {
                System.out.println("Message");
                System.out.println("  MessageId:     "
                        + message.getMessageId());
                System.out.println("  ReceiptHandle: "
                        + message.getReceiptHandle());
                System.out.println("  MD5OfBody:     "
                        + message.getMD5OfBody());
                System.out.println("  Body:          "
                        + message.getBody());
                for (final Entry<String, String> entry : message.getAttributes()
                        .entrySet()) {
                    System.out.println("Attribute");
                    System.out.println("  Name:  " + entry
                            .getKey());
                    System.out.println("  Value: " + entry
                            .getValue());
                }
            }
	    }
	    	catch (final AmazonServiceException ase) {
	            System.out.println("Caught an AmazonServiceException, which means " +
	                    "your request made it to Amazon SQS, but was " +
	                    "rejected with an error response for some reason.");
	            System.out.println("Error Message:    " + ase.getMessage());
	            System.out.println("HTTP Status Code: " + ase.getStatusCode());
	            System.out.println("AWS Error Code:   " + ase.getErrorCode());
	            System.out.println("Error Type:       " + ase.getErrorType());
	            System.out.println("Request ID:       " + ase.getRequestId());
	        } catch (final AmazonClientException ace) {
	            System.out.println("Caught an AmazonClientException, which means " +
	                    "the client encountered a serious internal problem while " +
	                    "trying to communicate with Amazon SQS, such as not " +
	                    "being able to access the network.");
	            System.out.println("Error Message: " + ace.getMessage());
	        }
	    }
	    
	    public void deleteMessage() {
	    	try {
	    		 // Delete the message.
	            System.out.println("Deleting a message.\n");
	            final ReceiveMessageRequest receiveMessageRequest =
	                    new ReceiveMessageRequest(myQueueUrl);
	            final List<Message> messages = sqs.receiveMessage(receiveMessageRequest)
	                    .getMessages();
	            final String messageReceiptHandle = messages.get(0).getReceiptHandle();
	            sqs.deleteMessage(new DeleteMessageRequest(myQueueUrl,
	                    messageReceiptHandle));

	    	}
	    	catch (final AmazonServiceException ase) {
	            System.out.println("Caught an AmazonServiceException, which means " +
	                    "your request made it to Amazon SQS, but was " +
	                    "rejected with an error response for some reason.");
	            System.out.println("Error Message:    " + ase.getMessage());
	            System.out.println("HTTP Status Code: " + ase.getStatusCode());
	            System.out.println("AWS Error Code:   " + ase.getErrorCode());
	            System.out.println("Error Type:       " + ase.getErrorType());
	            System.out.println("Request ID:       " + ase.getRequestId());
	        } catch (final AmazonClientException ace) {
	            System.out.println("Caught an AmazonClientException, which means " +
	                    "the client encountered a serious internal problem while " +
	                    "trying to communicate with Amazon SQS, such as not " +
	                    "being able to access the network.");
	            System.out.println("Error Message: " + ace.getMessage());
	        }
	    }
	    
	    public void deleteQueue() {
	    	try {
	    		// Delete the queue.
	            System.out.println("Deleting the test queue.\n");
	            sqs.deleteQueue(new DeleteQueueRequest(myQueueUrl));
	    	}
	    	catch (final AmazonServiceException ase) {
	            System.out.println("Caught an AmazonServiceException, which means " +
	                    "your request made it to Amazon SQS, but was " +
	                    "rejected with an error response for some reason.");
	            System.out.println("Error Message:    " + ase.getMessage());
	            System.out.println("HTTP Status Code: " + ase.getStatusCode());
	            System.out.println("AWS Error Code:   " + ase.getErrorCode());
	            System.out.println("Error Type:       " + ase.getErrorType());
	            System.out.println("Request ID:       " + ase.getRequestId());
	        } catch (final AmazonClientException ace) {
	            System.out.println("Caught an AmazonClientException, which means " +
	                    "the client encountered a serious internal problem while " +
	                    "trying to communicate with Amazon SQS, such as not " +
	                    "being able to access the network.");
	            System.out.println("Error Message: " + ace.getMessage());
	        }
	    }
	    

}
